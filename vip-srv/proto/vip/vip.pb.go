// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vip.proto

package go_micro_srv_vip

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckNameRequest) Reset()         { *m = CheckNameRequest{} }
func (m *CheckNameRequest) String() string { return proto.CompactTextString(m) }
func (*CheckNameRequest) ProtoMessage()    {}
func (*CheckNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2670e1a48005ac67, []int{0}
}

func (m *CheckNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckNameRequest.Unmarshal(m, b)
}
func (m *CheckNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckNameRequest.Marshal(b, m, deterministic)
}
func (m *CheckNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckNameRequest.Merge(m, src)
}
func (m *CheckNameRequest) XXX_Size() int {
	return xxx_messageInfo_CheckNameRequest.Size(m)
}
func (m *CheckNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckNameRequest proto.InternalMessageInfo

func (m *CheckNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CheckNameResponse struct {
	IsVip                bool     `protobuf:"varint,1,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckNameResponse) Reset()         { *m = CheckNameResponse{} }
func (m *CheckNameResponse) String() string { return proto.CompactTextString(m) }
func (*CheckNameResponse) ProtoMessage()    {}
func (*CheckNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2670e1a48005ac67, []int{1}
}

func (m *CheckNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckNameResponse.Unmarshal(m, b)
}
func (m *CheckNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckNameResponse.Marshal(b, m, deterministic)
}
func (m *CheckNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckNameResponse.Merge(m, src)
}
func (m *CheckNameResponse) XXX_Size() int {
	return xxx_messageInfo_CheckNameResponse.Size(m)
}
func (m *CheckNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckNameResponse proto.InternalMessageInfo

func (m *CheckNameResponse) GetIsVip() bool {
	if m != nil {
		return m.IsVip
	}
	return false
}

func init() {
	proto.RegisterType((*CheckNameRequest)(nil), "go.micro.srv.vip.CheckNameRequest")
	proto.RegisterType((*CheckNameResponse)(nil), "go.micro.srv.vip.CheckNameResponse")
}

func init() { proto.RegisterFile("vip.proto", fileDescriptor_2670e1a48005ac67) }

var fileDescriptor_2670e1a48005ac67 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xcb, 0x2c, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x48, 0xcf, 0xd7, 0xcb, 0xcd, 0x4c, 0x2e, 0xca, 0xd7,
	0x2b, 0x2e, 0x2a, 0xd3, 0x2b, 0xcb, 0x2c, 0x50, 0x52, 0xe3, 0x12, 0x70, 0xce, 0x48, 0x4d, 0xce,
	0xf6, 0x4b, 0xcc, 0x4d, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xb4, 0xb8, 0x04,
	0x91, 0xd4, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x89, 0x72, 0xb1, 0x65, 0x16, 0xc7, 0x97,
	0x65, 0x16, 0x80, 0x95, 0x72, 0x04, 0xb1, 0x66, 0x16, 0x87, 0x65, 0x16, 0x18, 0xc5, 0x72, 0x31,
	0x87, 0x79, 0x06, 0x08, 0x85, 0x71, 0x71, 0xc2, 0xb5, 0x08, 0x29, 0xe9, 0xa1, 0x5b, 0xad, 0x87,
	0x6e, 0xaf, 0x94, 0x32, 0x5e, 0x35, 0x10, 0x3b, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x7e, 0x31, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x78, 0x56, 0x75, 0xd8, 0x00, 0x00, 0x00,
}
